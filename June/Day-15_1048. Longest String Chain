// Problem Link : https://leetcode.com/problems/longest-string-chain/

// Author - gladiator-20


bool comp(string a,string b){
    return (a.length() < b.length());
}

class Solution {
public:
    int longestStrChain(vector<string>& words) {
        int n=words.size();
        
        sort(words.begin(),words.end(),comp);
        
        unordered_map<string,int>dp;
        int mx=1;
        for(int i=0;i<n;i++){
            dp[words[i]]=1;
            
            for(int k=0;k<words[i].length();k++){
                string tem=words[i];
                tem.erase(tem.begin()+k);
                if(dp.count(tem)){
                    dp[words[i]]=max(dp[tem]+1,dp[words[i]]);
                    mx=max(mx,dp[words[i]]);
                }   
            }
            
        }
        return mx;
        
    }
};